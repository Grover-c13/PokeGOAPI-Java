// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/github/aeonlucid/pogoprotos/networking/Requests.proto

package com.github.aeonlucid.pogoprotos.networking;

public final class Requests {
  private Requests() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.networking.requests.RequestType}
   */
  public enum RequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No implementation required
     * </pre>
     *
     * <code>METHOD_UNSET = 0;</code>
     */
    METHOD_UNSET(0),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_PLAYER = 2;</code>
     */
    GET_PLAYER(2),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_INVENTORY = 4;</code>
     */
    GET_INVENTORY(4),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_SETTINGS = 5;</code>
     */
    DOWNLOAD_SETTINGS(5),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_ITEM_TEMPLATES = 6;</code>
     */
    DOWNLOAD_ITEM_TEMPLATES(6),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_REMOTE_CONFIG_VERSION = 7;</code>
     */
    DOWNLOAD_REMOTE_CONFIG_VERSION(7),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>REGISTER_BACKGROUND_DEVICE = 8;</code>
     */
    REGISTER_BACKGROUND_DEVICE(8),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_SEARCH = 101;</code>
     */
    FORT_SEARCH(101),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ENCOUNTER = 102;</code>
     */
    ENCOUNTER(102),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CATCH_POKEMON = 103;</code>
     */
    CATCH_POKEMON(103),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_DETAILS = 104;</code>
     */
    FORT_DETAILS(104),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_MAP_OBJECTS = 106;</code>
     */
    GET_MAP_OBJECTS(106),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_DEPLOY_POKEMON = 110;</code>
     */
    FORT_DEPLOY_POKEMON(110),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_RECALL_POKEMON = 111;</code>
     */
    FORT_RECALL_POKEMON(111),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>RELEASE_POKEMON = 112;</code>
     */
    RELEASE_POKEMON(112),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_POTION = 113;</code>
     */
    USE_ITEM_POTION(113),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_CAPTURE = 114;</code>
     */
    USE_ITEM_CAPTURE(114),
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>USE_ITEM_FLEE = 115;</code>
     */
    USE_ITEM_FLEE(115),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_REVIVE = 116;</code>
     */
    USE_ITEM_REVIVE(116),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_PLAYER_PROFILE = 121;</code>
     */
    GET_PLAYER_PROFILE(121),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>EVOLVE_POKEMON = 125;</code>
     */
    EVOLVE_POKEMON(125),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_HATCHED_EGGS = 126;</code>
     */
    GET_HATCHED_EGGS(126),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ENCOUNTER_TUTORIAL_COMPLETE = 127;</code>
     */
    ENCOUNTER_TUTORIAL_COMPLETE(127),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>LEVEL_UP_REWARDS = 128;</code>
     */
    LEVEL_UP_REWARDS(128),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CHECK_AWARDED_BADGES = 129;</code>
     */
    CHECK_AWARDED_BADGES(129),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_GYM = 133;</code>
     */
    USE_ITEM_GYM(133),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_GYM_DETAILS = 134;</code>
     */
    GET_GYM_DETAILS(134),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>START_GYM_BATTLE = 135;</code>
     */
    START_GYM_BATTLE(135),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ATTACK_GYM = 136;</code>
     */
    ATTACK_GYM(136),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>RECYCLE_INVENTORY_ITEM = 137;</code>
     */
    RECYCLE_INVENTORY_ITEM(137),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>COLLECT_DAILY_BONUS = 138;</code>
     */
    COLLECT_DAILY_BONUS(138),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_XP_BOOST = 139;</code>
     */
    USE_ITEM_XP_BOOST(139),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_EGG_INCUBATOR = 140;</code>
     */
    USE_ITEM_EGG_INCUBATOR(140),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_INCENSE = 141;</code>
     */
    USE_INCENSE(141),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_INCENSE_POKEMON = 142;</code>
     */
    GET_INCENSE_POKEMON(142),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>INCENSE_ENCOUNTER = 143;</code>
     */
    INCENSE_ENCOUNTER(143),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ADD_FORT_MODIFIER = 144;</code>
     */
    ADD_FORT_MODIFIER(144),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DISK_ENCOUNTER = 145;</code>
     */
    DISK_ENCOUNTER(145),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>COLLECT_DAILY_DEFENDER_BONUS = 146;</code>
     */
    COLLECT_DAILY_DEFENDER_BONUS(146),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>UPGRADE_POKEMON = 147;</code>
     */
    UPGRADE_POKEMON(147),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_FAVORITE_POKEMON = 148;</code>
     */
    SET_FAVORITE_POKEMON(148),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>NICKNAME_POKEMON = 149;</code>
     */
    NICKNAME_POKEMON(149),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>EQUIP_BADGE = 150;</code>
     */
    EQUIP_BADGE(150),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_CONTACT_SETTINGS = 151;</code>
     */
    SET_CONTACT_SETTINGS(151),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_BUDDY_POKEMON = 152;</code>
     */
    SET_BUDDY_POKEMON(152),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_BUDDY_WALKED = 153;</code>
     */
    GET_BUDDY_WALKED(153),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_ENCOUNTER = 154;</code>
     */
    USE_ITEM_ENCOUNTER(154),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_ASSET_DIGEST = 300;</code>
     */
    GET_ASSET_DIGEST(300),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_DOWNLOAD_URLS = 301;</code>
     */
    GET_DOWNLOAD_URLS(301),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CLAIM_CODENAME = 403;</code>
     */
    CLAIM_CODENAME(403),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_AVATAR = 404;</code>
     */
    SET_AVATAR(404),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_PLAYER_TEAM = 405;</code>
     */
    SET_PLAYER_TEAM(405),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>MARK_TUTORIAL_COMPLETE = 406;</code>
     */
    MARK_TUTORIAL_COMPLETE(406),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CHECK_CHALLENGE = 600;</code>
     */
    CHECK_CHALLENGE(600),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>VERIFY_CHALLENGE = 601;</code>
     */
    VERIFY_CHALLENGE(601),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ECHO = 666;</code>
     */
    ECHO(666),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_REGISTRATION = 800;</code>
     */
    SFIDA_REGISTRATION(800),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SFIDA_ACTION_LOG = 801;</code>
     */
    SFIDA_ACTION_LOG(801),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_CERTIFICATION = 802;</code>
     */
    SFIDA_CERTIFICATION(802),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_UPDATE = 803;</code>
     */
    SFIDA_UPDATE(803),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_ACTION = 804;</code>
     */
    SFIDA_ACTION(804),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_DOWSER = 805;</code>
     */
    SFIDA_DOWSER(805),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_CAPTURE = 806;</code>
     */
    SFIDA_CAPTURE(806),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>LIST_AVATAR_CUSTOMIZATIONS = 807;</code>
     */
    LIST_AVATAR_CUSTOMIZATIONS(807),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_AVATAR_ITEM_AS_VIEWED = 808;</code>
     */
    SET_AVATAR_ITEM_AS_VIEWED(808),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No implementation required
     * </pre>
     *
     * <code>METHOD_UNSET = 0;</code>
     */
    public static final int METHOD_UNSET_VALUE = 0;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_PLAYER = 2;</code>
     */
    public static final int GET_PLAYER_VALUE = 2;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_INVENTORY = 4;</code>
     */
    public static final int GET_INVENTORY_VALUE = 4;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_SETTINGS = 5;</code>
     */
    public static final int DOWNLOAD_SETTINGS_VALUE = 5;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_ITEM_TEMPLATES = 6;</code>
     */
    public static final int DOWNLOAD_ITEM_TEMPLATES_VALUE = 6;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_REMOTE_CONFIG_VERSION = 7;</code>
     */
    public static final int DOWNLOAD_REMOTE_CONFIG_VERSION_VALUE = 7;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>REGISTER_BACKGROUND_DEVICE = 8;</code>
     */
    public static final int REGISTER_BACKGROUND_DEVICE_VALUE = 8;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_SEARCH = 101;</code>
     */
    public static final int FORT_SEARCH_VALUE = 101;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ENCOUNTER = 102;</code>
     */
    public static final int ENCOUNTER_VALUE = 102;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CATCH_POKEMON = 103;</code>
     */
    public static final int CATCH_POKEMON_VALUE = 103;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_DETAILS = 104;</code>
     */
    public static final int FORT_DETAILS_VALUE = 104;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_MAP_OBJECTS = 106;</code>
     */
    public static final int GET_MAP_OBJECTS_VALUE = 106;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_DEPLOY_POKEMON = 110;</code>
     */
    public static final int FORT_DEPLOY_POKEMON_VALUE = 110;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_RECALL_POKEMON = 111;</code>
     */
    public static final int FORT_RECALL_POKEMON_VALUE = 111;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>RELEASE_POKEMON = 112;</code>
     */
    public static final int RELEASE_POKEMON_VALUE = 112;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_POTION = 113;</code>
     */
    public static final int USE_ITEM_POTION_VALUE = 113;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_CAPTURE = 114;</code>
     */
    public static final int USE_ITEM_CAPTURE_VALUE = 114;
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>USE_ITEM_FLEE = 115;</code>
     */
    public static final int USE_ITEM_FLEE_VALUE = 115;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_REVIVE = 116;</code>
     */
    public static final int USE_ITEM_REVIVE_VALUE = 116;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_PLAYER_PROFILE = 121;</code>
     */
    public static final int GET_PLAYER_PROFILE_VALUE = 121;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>EVOLVE_POKEMON = 125;</code>
     */
    public static final int EVOLVE_POKEMON_VALUE = 125;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_HATCHED_EGGS = 126;</code>
     */
    public static final int GET_HATCHED_EGGS_VALUE = 126;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ENCOUNTER_TUTORIAL_COMPLETE = 127;</code>
     */
    public static final int ENCOUNTER_TUTORIAL_COMPLETE_VALUE = 127;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>LEVEL_UP_REWARDS = 128;</code>
     */
    public static final int LEVEL_UP_REWARDS_VALUE = 128;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CHECK_AWARDED_BADGES = 129;</code>
     */
    public static final int CHECK_AWARDED_BADGES_VALUE = 129;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_GYM = 133;</code>
     */
    public static final int USE_ITEM_GYM_VALUE = 133;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_GYM_DETAILS = 134;</code>
     */
    public static final int GET_GYM_DETAILS_VALUE = 134;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>START_GYM_BATTLE = 135;</code>
     */
    public static final int START_GYM_BATTLE_VALUE = 135;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ATTACK_GYM = 136;</code>
     */
    public static final int ATTACK_GYM_VALUE = 136;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>RECYCLE_INVENTORY_ITEM = 137;</code>
     */
    public static final int RECYCLE_INVENTORY_ITEM_VALUE = 137;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>COLLECT_DAILY_BONUS = 138;</code>
     */
    public static final int COLLECT_DAILY_BONUS_VALUE = 138;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_XP_BOOST = 139;</code>
     */
    public static final int USE_ITEM_XP_BOOST_VALUE = 139;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_EGG_INCUBATOR = 140;</code>
     */
    public static final int USE_ITEM_EGG_INCUBATOR_VALUE = 140;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_INCENSE = 141;</code>
     */
    public static final int USE_INCENSE_VALUE = 141;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_INCENSE_POKEMON = 142;</code>
     */
    public static final int GET_INCENSE_POKEMON_VALUE = 142;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>INCENSE_ENCOUNTER = 143;</code>
     */
    public static final int INCENSE_ENCOUNTER_VALUE = 143;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ADD_FORT_MODIFIER = 144;</code>
     */
    public static final int ADD_FORT_MODIFIER_VALUE = 144;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DISK_ENCOUNTER = 145;</code>
     */
    public static final int DISK_ENCOUNTER_VALUE = 145;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>COLLECT_DAILY_DEFENDER_BONUS = 146;</code>
     */
    public static final int COLLECT_DAILY_DEFENDER_BONUS_VALUE = 146;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>UPGRADE_POKEMON = 147;</code>
     */
    public static final int UPGRADE_POKEMON_VALUE = 147;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_FAVORITE_POKEMON = 148;</code>
     */
    public static final int SET_FAVORITE_POKEMON_VALUE = 148;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>NICKNAME_POKEMON = 149;</code>
     */
    public static final int NICKNAME_POKEMON_VALUE = 149;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>EQUIP_BADGE = 150;</code>
     */
    public static final int EQUIP_BADGE_VALUE = 150;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_CONTACT_SETTINGS = 151;</code>
     */
    public static final int SET_CONTACT_SETTINGS_VALUE = 151;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_BUDDY_POKEMON = 152;</code>
     */
    public static final int SET_BUDDY_POKEMON_VALUE = 152;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_BUDDY_WALKED = 153;</code>
     */
    public static final int GET_BUDDY_WALKED_VALUE = 153;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_ENCOUNTER = 154;</code>
     */
    public static final int USE_ITEM_ENCOUNTER_VALUE = 154;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_ASSET_DIGEST = 300;</code>
     */
    public static final int GET_ASSET_DIGEST_VALUE = 300;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_DOWNLOAD_URLS = 301;</code>
     */
    public static final int GET_DOWNLOAD_URLS_VALUE = 301;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CLAIM_CODENAME = 403;</code>
     */
    public static final int CLAIM_CODENAME_VALUE = 403;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_AVATAR = 404;</code>
     */
    public static final int SET_AVATAR_VALUE = 404;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_PLAYER_TEAM = 405;</code>
     */
    public static final int SET_PLAYER_TEAM_VALUE = 405;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>MARK_TUTORIAL_COMPLETE = 406;</code>
     */
    public static final int MARK_TUTORIAL_COMPLETE_VALUE = 406;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CHECK_CHALLENGE = 600;</code>
     */
    public static final int CHECK_CHALLENGE_VALUE = 600;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>VERIFY_CHALLENGE = 601;</code>
     */
    public static final int VERIFY_CHALLENGE_VALUE = 601;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ECHO = 666;</code>
     */
    public static final int ECHO_VALUE = 666;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_REGISTRATION = 800;</code>
     */
    public static final int SFIDA_REGISTRATION_VALUE = 800;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SFIDA_ACTION_LOG = 801;</code>
     */
    public static final int SFIDA_ACTION_LOG_VALUE = 801;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_CERTIFICATION = 802;</code>
     */
    public static final int SFIDA_CERTIFICATION_VALUE = 802;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_UPDATE = 803;</code>
     */
    public static final int SFIDA_UPDATE_VALUE = 803;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_ACTION = 804;</code>
     */
    public static final int SFIDA_ACTION_VALUE = 804;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_DOWSER = 805;</code>
     */
    public static final int SFIDA_DOWSER_VALUE = 805;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_CAPTURE = 806;</code>
     */
    public static final int SFIDA_CAPTURE_VALUE = 806;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>LIST_AVATAR_CUSTOMIZATIONS = 807;</code>
     */
    public static final int LIST_AVATAR_CUSTOMIZATIONS_VALUE = 807;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_AVATAR_ITEM_AS_VIEWED = 808;</code>
     */
    public static final int SET_AVATAR_ITEM_AS_VIEWED_VALUE = 808;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RequestType valueOf(int value) {
      return forNumber(value);
    }

    public static RequestType forNumber(int value) {
      switch (value) {
        case 0: return METHOD_UNSET;
        case 2: return GET_PLAYER;
        case 4: return GET_INVENTORY;
        case 5: return DOWNLOAD_SETTINGS;
        case 6: return DOWNLOAD_ITEM_TEMPLATES;
        case 7: return DOWNLOAD_REMOTE_CONFIG_VERSION;
        case 8: return REGISTER_BACKGROUND_DEVICE;
        case 101: return FORT_SEARCH;
        case 102: return ENCOUNTER;
        case 103: return CATCH_POKEMON;
        case 104: return FORT_DETAILS;
        case 106: return GET_MAP_OBJECTS;
        case 110: return FORT_DEPLOY_POKEMON;
        case 111: return FORT_RECALL_POKEMON;
        case 112: return RELEASE_POKEMON;
        case 113: return USE_ITEM_POTION;
        case 114: return USE_ITEM_CAPTURE;
        case 115: return USE_ITEM_FLEE;
        case 116: return USE_ITEM_REVIVE;
        case 121: return GET_PLAYER_PROFILE;
        case 125: return EVOLVE_POKEMON;
        case 126: return GET_HATCHED_EGGS;
        case 127: return ENCOUNTER_TUTORIAL_COMPLETE;
        case 128: return LEVEL_UP_REWARDS;
        case 129: return CHECK_AWARDED_BADGES;
        case 133: return USE_ITEM_GYM;
        case 134: return GET_GYM_DETAILS;
        case 135: return START_GYM_BATTLE;
        case 136: return ATTACK_GYM;
        case 137: return RECYCLE_INVENTORY_ITEM;
        case 138: return COLLECT_DAILY_BONUS;
        case 139: return USE_ITEM_XP_BOOST;
        case 140: return USE_ITEM_EGG_INCUBATOR;
        case 141: return USE_INCENSE;
        case 142: return GET_INCENSE_POKEMON;
        case 143: return INCENSE_ENCOUNTER;
        case 144: return ADD_FORT_MODIFIER;
        case 145: return DISK_ENCOUNTER;
        case 146: return COLLECT_DAILY_DEFENDER_BONUS;
        case 147: return UPGRADE_POKEMON;
        case 148: return SET_FAVORITE_POKEMON;
        case 149: return NICKNAME_POKEMON;
        case 150: return EQUIP_BADGE;
        case 151: return SET_CONTACT_SETTINGS;
        case 152: return SET_BUDDY_POKEMON;
        case 153: return GET_BUDDY_WALKED;
        case 154: return USE_ITEM_ENCOUNTER;
        case 300: return GET_ASSET_DIGEST;
        case 301: return GET_DOWNLOAD_URLS;
        case 403: return CLAIM_CODENAME;
        case 404: return SET_AVATAR;
        case 405: return SET_PLAYER_TEAM;
        case 406: return MARK_TUTORIAL_COMPLETE;
        case 600: return CHECK_CHALLENGE;
        case 601: return VERIFY_CHALLENGE;
        case 666: return ECHO;
        case 800: return SFIDA_REGISTRATION;
        case 801: return SFIDA_ACTION_LOG;
        case 802: return SFIDA_CERTIFICATION;
        case 803: return SFIDA_UPDATE;
        case 804: return SFIDA_ACTION;
        case 805: return SFIDA_DOWSER;
        case 806: return SFIDA_CAPTURE;
        case 807: return LIST_AVATAR_CUSTOMIZATIONS;
        case 808: return SET_AVATAR_ITEM_AS_VIEWED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.networking.Requests.getDescriptor().getEnumTypes().get(0);
    }

    private static final RequestType[] VALUES = values();

    public static RequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.networking.requests.RequestType)
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.aeonlucid.pogoprotos.networking.requests.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    int getRequestTypeValue();
    /**
     * <code>.com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    com.github.aeonlucid.pogoprotos.networking.Requests.RequestType getRequestType();

    /**
     * <code>bytes request_message = 2;</code>
     */
    com.google.protobuf.ByteString getRequestMessage();
  }
  /**
   * Protobuf type {@code com.github.aeonlucid.pogoprotos.networking.requests.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.aeonlucid.pogoprotos.networking.requests.Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
      requestType_ = 0;
      requestMessage_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              requestType_ = rawValue;
              break;
            }
            case 18: {

              requestMessage_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.networking.Requests.internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.aeonlucid.pogoprotos.networking.Requests.internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.aeonlucid.pogoprotos.networking.Requests.Request.class, com.github.aeonlucid.pogoprotos.networking.Requests.Request.Builder.class);
    }

    public static final int REQUEST_TYPE_FIELD_NUMBER = 1;
    private int requestType_;
    /**
     * <code>.com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    public int getRequestTypeValue() {
      return requestType_;
    }
    /**
     * <code>.com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    public com.github.aeonlucid.pogoprotos.networking.Requests.RequestType getRequestType() {
      com.github.aeonlucid.pogoprotos.networking.Requests.RequestType result = com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.valueOf(requestType_);
      return result == null ? com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.UNRECOGNIZED : result;
    }

    public static final int REQUEST_MESSAGE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString requestMessage_;
    /**
     * <code>bytes request_message = 2;</code>
     */
    public com.google.protobuf.ByteString getRequestMessage() {
      return requestMessage_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestType_ != com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.METHOD_UNSET.getNumber()) {
        output.writeEnum(1, requestType_);
      }
      if (!requestMessage_.isEmpty()) {
        output.writeBytes(2, requestMessage_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestType_ != com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.METHOD_UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, requestType_);
      }
      if (!requestMessage_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, requestMessage_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.aeonlucid.pogoprotos.networking.Requests.Request)) {
        return super.equals(obj);
      }
      com.github.aeonlucid.pogoprotos.networking.Requests.Request other = (com.github.aeonlucid.pogoprotos.networking.Requests.Request) obj;

      boolean result = true;
      result = result && requestType_ == other.requestType_;
      result = result && getRequestMessage()
          .equals(other.getRequestMessage());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REQUEST_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + requestType_;
      hash = (37 * hash) + REQUEST_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getRequestMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.aeonlucid.pogoprotos.networking.Requests.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.aeonlucid.pogoprotos.networking.requests.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.aeonlucid.pogoprotos.networking.requests.Request)
        com.github.aeonlucid.pogoprotos.networking.Requests.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.aeonlucid.pogoprotos.networking.Requests.internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.aeonlucid.pogoprotos.networking.Requests.internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.aeonlucid.pogoprotos.networking.Requests.Request.class, com.github.aeonlucid.pogoprotos.networking.Requests.Request.Builder.class);
      }

      // Construct using com.github.aeonlucid.pogoprotos.networking.Requests.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        requestType_ = 0;

        requestMessage_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.aeonlucid.pogoprotos.networking.Requests.internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_descriptor;
      }

      public com.github.aeonlucid.pogoprotos.networking.Requests.Request getDefaultInstanceForType() {
        return com.github.aeonlucid.pogoprotos.networking.Requests.Request.getDefaultInstance();
      }

      public com.github.aeonlucid.pogoprotos.networking.Requests.Request build() {
        com.github.aeonlucid.pogoprotos.networking.Requests.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.aeonlucid.pogoprotos.networking.Requests.Request buildPartial() {
        com.github.aeonlucid.pogoprotos.networking.Requests.Request result = new com.github.aeonlucid.pogoprotos.networking.Requests.Request(this);
        result.requestType_ = requestType_;
        result.requestMessage_ = requestMessage_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.aeonlucid.pogoprotos.networking.Requests.Request) {
          return mergeFrom((com.github.aeonlucid.pogoprotos.networking.Requests.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.aeonlucid.pogoprotos.networking.Requests.Request other) {
        if (other == com.github.aeonlucid.pogoprotos.networking.Requests.Request.getDefaultInstance()) return this;
        if (other.requestType_ != 0) {
          setRequestTypeValue(other.getRequestTypeValue());
        }
        if (other.getRequestMessage() != com.google.protobuf.ByteString.EMPTY) {
          setRequestMessage(other.getRequestMessage());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.aeonlucid.pogoprotos.networking.Requests.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.aeonlucid.pogoprotos.networking.Requests.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int requestType_ = 0;
      /**
       * <code>.com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public int getRequestTypeValue() {
        return requestType_;
      }
      /**
       * <code>.com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public Builder setRequestTypeValue(int value) {
        requestType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public com.github.aeonlucid.pogoprotos.networking.Requests.RequestType getRequestType() {
        com.github.aeonlucid.pogoprotos.networking.Requests.RequestType result = com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.valueOf(requestType_);
        return result == null ? com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public Builder setRequestType(com.github.aeonlucid.pogoprotos.networking.Requests.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        requestType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public Builder clearRequestType() {
        
        requestType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString requestMessage_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes request_message = 2;</code>
       */
      public com.google.protobuf.ByteString getRequestMessage() {
        return requestMessage_;
      }
      /**
       * <code>bytes request_message = 2;</code>
       */
      public Builder setRequestMessage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        requestMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes request_message = 2;</code>
       */
      public Builder clearRequestMessage() {
        
        requestMessage_ = getDefaultInstance().getRequestMessage();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.github.aeonlucid.pogoprotos.networking.requests.Request)
    }

    // @@protoc_insertion_point(class_scope:com.github.aeonlucid.pogoprotos.networking.requests.Request)
    private static final com.github.aeonlucid.pogoprotos.networking.Requests.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.aeonlucid.pogoprotos.networking.Requests.Request();
    }

    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public com.github.aeonlucid.pogoprotos.networking.Requests.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9com/github/aeonlucid/pogoprotos/networ" +
      "king/Requests.proto\0223com.github.aeonluci" +
      "d.pogoprotos.networking.requests\"z\n\007Requ" +
      "est\022V\n\014request_type\030\001 \001(\0162@.com.github.a" +
      "eonlucid.pogoprotos.networking.requests." +
      "RequestType\022\027\n\017request_message\030\002 \001(\014*\351\013\n" +
      "\013RequestType\022\020\n\014METHOD_UNSET\020\000\022\016\n\nGET_PL" +
      "AYER\020\002\022\021\n\rGET_INVENTORY\020\004\022\025\n\021DOWNLOAD_SE" +
      "TTINGS\020\005\022\033\n\027DOWNLOAD_ITEM_TEMPLATES\020\006\022\"\n" +
      "\036DOWNLOAD_REMOTE_CONFIG_VERSION\020\007\022\036\n\032REG",
      "ISTER_BACKGROUND_DEVICE\020\010\022\017\n\013FORT_SEARCH" +
      "\020e\022\r\n\tENCOUNTER\020f\022\021\n\rCATCH_POKEMON\020g\022\020\n\014" +
      "FORT_DETAILS\020h\022\023\n\017GET_MAP_OBJECTS\020j\022\027\n\023F" +
      "ORT_DEPLOY_POKEMON\020n\022\027\n\023FORT_RECALL_POKE" +
      "MON\020o\022\023\n\017RELEASE_POKEMON\020p\022\023\n\017USE_ITEM_P" +
      "OTION\020q\022\024\n\020USE_ITEM_CAPTURE\020r\022\021\n\rUSE_ITE" +
      "M_FLEE\020s\022\023\n\017USE_ITEM_REVIVE\020t\022\026\n\022GET_PLA" +
      "YER_PROFILE\020y\022\022\n\016EVOLVE_POKEMON\020}\022\024\n\020GET" +
      "_HATCHED_EGGS\020~\022\037\n\033ENCOUNTER_TUTORIAL_CO" +
      "MPLETE\020\177\022\025\n\020LEVEL_UP_REWARDS\020\200\001\022\031\n\024CHECK",
      "_AWARDED_BADGES\020\201\001\022\021\n\014USE_ITEM_GYM\020\205\001\022\024\n" +
      "\017GET_GYM_DETAILS\020\206\001\022\025\n\020START_GYM_BATTLE\020" +
      "\207\001\022\017\n\nATTACK_GYM\020\210\001\022\033\n\026RECYCLE_INVENTORY" +
      "_ITEM\020\211\001\022\030\n\023COLLECT_DAILY_BONUS\020\212\001\022\026\n\021US" +
      "E_ITEM_XP_BOOST\020\213\001\022\033\n\026USE_ITEM_EGG_INCUB" +
      "ATOR\020\214\001\022\020\n\013USE_INCENSE\020\215\001\022\030\n\023GET_INCENSE" +
      "_POKEMON\020\216\001\022\026\n\021INCENSE_ENCOUNTER\020\217\001\022\026\n\021A" +
      "DD_FORT_MODIFIER\020\220\001\022\023\n\016DISK_ENCOUNTER\020\221\001" +
      "\022!\n\034COLLECT_DAILY_DEFENDER_BONUS\020\222\001\022\024\n\017U" +
      "PGRADE_POKEMON\020\223\001\022\031\n\024SET_FAVORITE_POKEMO",
      "N\020\224\001\022\025\n\020NICKNAME_POKEMON\020\225\001\022\020\n\013EQUIP_BAD" +
      "GE\020\226\001\022\031\n\024SET_CONTACT_SETTINGS\020\227\001\022\026\n\021SET_" +
      "BUDDY_POKEMON\020\230\001\022\025\n\020GET_BUDDY_WALKED\020\231\001\022" +
      "\027\n\022USE_ITEM_ENCOUNTER\020\232\001\022\025\n\020GET_ASSET_DI" +
      "GEST\020\254\002\022\026\n\021GET_DOWNLOAD_URLS\020\255\002\022\023\n\016CLAIM" +
      "_CODENAME\020\223\003\022\017\n\nSET_AVATAR\020\224\003\022\024\n\017SET_PLA" +
      "YER_TEAM\020\225\003\022\033\n\026MARK_TUTORIAL_COMPLETE\020\226\003" +
      "\022\024\n\017CHECK_CHALLENGE\020\330\004\022\025\n\020VERIFY_CHALLEN" +
      "GE\020\331\004\022\t\n\004ECHO\020\232\005\022\027\n\022SFIDA_REGISTRATION\020\240" +
      "\006\022\025\n\020SFIDA_ACTION_LOG\020\241\006\022\030\n\023SFIDA_CERTIF",
      "ICATION\020\242\006\022\021\n\014SFIDA_UPDATE\020\243\006\022\021\n\014SFIDA_A" +
      "CTION\020\244\006\022\021\n\014SFIDA_DOWSER\020\245\006\022\022\n\rSFIDA_CAP" +
      "TURE\020\246\006\022\037\n\032LIST_AVATAR_CUSTOMIZATIONS\020\247\006" +
      "\022\036\n\031SET_AVATAR_ITEM_AS_VIEWED\020\250\006B6\n*com." +
      "github.aeonlucid.pogoprotos.networkingB\010" +
      "Requestsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_aeonlucid_pogoprotos_networking_requests_Request_descriptor,
        new java.lang.String[] { "RequestType", "RequestMessage", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
