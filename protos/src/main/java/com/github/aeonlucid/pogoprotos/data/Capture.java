// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/com.github/aeonlucid/pogoprotos/data/Capture.proto

package com.github.aeonlucid.pogoprotos.data;

public final class Capture {
  private Capture() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CaptureAwardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    java.util.List<com.github.aeonlucid.pogoprotos.Enums.ActivityType> getActivityTypeList();
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    int getActivityTypeCount();
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    com.github.aeonlucid.pogoprotos.Enums.ActivityType getActivityType(int index);
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Integer>
    getActivityTypeValueList();
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    int getActivityTypeValue(int index);

    /**
     * <code>repeated int32 xp = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getXpList();
    /**
     * <code>repeated int32 xp = 2 [packed = true];</code>
     */
    int getXpCount();
    /**
     * <code>repeated int32 xp = 2 [packed = true];</code>
     */
    int getXp(int index);

    /**
     * <code>repeated int32 candy = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getCandyList();
    /**
     * <code>repeated int32 candy = 3 [packed = true];</code>
     */
    int getCandyCount();
    /**
     * <code>repeated int32 candy = 3 [packed = true];</code>
     */
    int getCandy(int index);

    /**
     * <code>repeated int32 stardust = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getStardustList();
    /**
     * <code>repeated int32 stardust = 4 [packed = true];</code>
     */
    int getStardustCount();
    /**
     * <code>repeated int32 stardust = 4 [packed = true];</code>
     */
    int getStardust(int index);
  }
  /**
   * Protobuf type {@code com.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward}
   */
  public  static final class CaptureAward extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward)
      CaptureAwardOrBuilder {
    // Use CaptureAward.newBuilder() to construct.
    private CaptureAward(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CaptureAward() {
      activityType_ = java.util.Collections.emptyList();
      xp_ = java.util.Collections.emptyList();
      candy_ = java.util.Collections.emptyList();
      stardust_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CaptureAward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                activityType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              activityType_.add(rawValue);
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  activityType_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                activityType_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                xp_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              xp_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                xp_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                xp_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                candy_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              candy_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                candy_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                candy_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                stardust_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              stardust_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                stardust_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                stardust_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          activityType_ = java.util.Collections.unmodifiableList(activityType_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          xp_ = java.util.Collections.unmodifiableList(xp_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          candy_ = java.util.Collections.unmodifiableList(candy_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          stardust_ = java.util.Collections.unmodifiableList(stardust_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward.class, com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward.Builder.class);
    }

    public static final int ACTIVITY_TYPE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> activityType_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, com.github.aeonlucid.pogoprotos.Enums.ActivityType> activityType_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, com.github.aeonlucid.pogoprotos.Enums.ActivityType>() {
              public com.github.aeonlucid.pogoprotos.Enums.ActivityType convert(java.lang.Integer from) {
                com.github.aeonlucid.pogoprotos.Enums.ActivityType result = com.github.aeonlucid.pogoprotos.Enums.ActivityType.valueOf(from);
                return result == null ? com.github.aeonlucid.pogoprotos.Enums.ActivityType.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    public java.util.List<com.github.aeonlucid.pogoprotos.Enums.ActivityType> getActivityTypeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.github.aeonlucid.pogoprotos.Enums.ActivityType>(activityType_, activityType_converter_);
    }
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    public int getActivityTypeCount() {
      return activityType_.size();
    }
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    public com.github.aeonlucid.pogoprotos.Enums.ActivityType getActivityType(int index) {
      return activityType_converter_.convert(activityType_.get(index));
    }
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
    getActivityTypeValueList() {
      return activityType_;
    }
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
     */
    public int getActivityTypeValue(int index) {
      return activityType_.get(index);
    }
    private int activityTypeMemoizedSerializedSize;

    public static final int XP_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> xp_;
    /**
     * <code>repeated int32 xp = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getXpList() {
      return xp_;
    }
    /**
     * <code>repeated int32 xp = 2 [packed = true];</code>
     */
    public int getXpCount() {
      return xp_.size();
    }
    /**
     * <code>repeated int32 xp = 2 [packed = true];</code>
     */
    public int getXp(int index) {
      return xp_.get(index);
    }
    private int xpMemoizedSerializedSize = -1;

    public static final int CANDY_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> candy_;
    /**
     * <code>repeated int32 candy = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getCandyList() {
      return candy_;
    }
    /**
     * <code>repeated int32 candy = 3 [packed = true];</code>
     */
    public int getCandyCount() {
      return candy_.size();
    }
    /**
     * <code>repeated int32 candy = 3 [packed = true];</code>
     */
    public int getCandy(int index) {
      return candy_.get(index);
    }
    private int candyMemoizedSerializedSize = -1;

    public static final int STARDUST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> stardust_;
    /**
     * <code>repeated int32 stardust = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getStardustList() {
      return stardust_;
    }
    /**
     * <code>repeated int32 stardust = 4 [packed = true];</code>
     */
    public int getStardustCount() {
      return stardust_.size();
    }
    /**
     * <code>repeated int32 stardust = 4 [packed = true];</code>
     */
    public int getStardust(int index) {
      return stardust_.get(index);
    }
    private int stardustMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getActivityTypeList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(activityTypeMemoizedSerializedSize);
      }
      for (int i = 0; i < activityType_.size(); i++) {
        output.writeEnumNoTag(activityType_.get(i));
      }
      if (getXpList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(xpMemoizedSerializedSize);
      }
      for (int i = 0; i < xp_.size(); i++) {
        output.writeInt32NoTag(xp_.get(i));
      }
      if (getCandyList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(candyMemoizedSerializedSize);
      }
      for (int i = 0; i < candy_.size(); i++) {
        output.writeInt32NoTag(candy_.get(i));
      }
      if (getStardustList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(stardustMemoizedSerializedSize);
      }
      for (int i = 0; i < stardust_.size(); i++) {
        output.writeInt32NoTag(stardust_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < activityType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(activityType_.get(i));
        }
        size += dataSize;
        if (!getActivityTypeList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }activityTypeMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xp_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xp_.get(i));
        }
        size += dataSize;
        if (!getXpList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        xpMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < candy_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(candy_.get(i));
        }
        size += dataSize;
        if (!getCandyList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        candyMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stardust_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(stardust_.get(i));
        }
        size += dataSize;
        if (!getStardustList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        stardustMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward)) {
        return super.equals(obj);
      }
      com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward other = (com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward) obj;

      boolean result = true;
      result = result && activityType_.equals(other.activityType_);
      result = result && getXpList()
          .equals(other.getXpList());
      result = result && getCandyList()
          .equals(other.getCandyList());
      result = result && getStardustList()
          .equals(other.getStardustList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getActivityTypeCount() > 0) {
        hash = (37 * hash) + ACTIVITY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + activityType_.hashCode();
      }
      if (getXpCount() > 0) {
        hash = (37 * hash) + XP_FIELD_NUMBER;
        hash = (53 * hash) + getXpList().hashCode();
      }
      if (getCandyCount() > 0) {
        hash = (37 * hash) + CANDY_FIELD_NUMBER;
        hash = (53 * hash) + getCandyList().hashCode();
      }
      if (getStardustCount() > 0) {
        hash = (37 * hash) + STARDUST_FIELD_NUMBER;
        hash = (53 * hash) + getStardustList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward)
        com.github.aeonlucid.pogoprotos.data.Capture.CaptureAwardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward.class, com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward.Builder.class);
      }

      // Construct using com.com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        activityType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        xp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        candy_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        stardust_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_descriptor;
      }

      public com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward getDefaultInstanceForType() {
        return com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward.getDefaultInstance();
      }

      public com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward build() {
        com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward buildPartial() {
        com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward result = new com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          activityType_ = java.util.Collections.unmodifiableList(activityType_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.activityType_ = activityType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          xp_ = java.util.Collections.unmodifiableList(xp_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.xp_ = xp_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          candy_ = java.util.Collections.unmodifiableList(candy_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.candy_ = candy_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          stardust_ = java.util.Collections.unmodifiableList(stardust_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.stardust_ = stardust_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward) {
          return mergeFrom((com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward other) {
        if (other == com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward.getDefaultInstance()) return this;
        if (!other.activityType_.isEmpty()) {
          if (activityType_.isEmpty()) {
            activityType_ = other.activityType_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureActivityTypeIsMutable();
            activityType_.addAll(other.activityType_);
          }
          onChanged();
        }
        if (!other.xp_.isEmpty()) {
          if (xp_.isEmpty()) {
            xp_ = other.xp_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureXpIsMutable();
            xp_.addAll(other.xp_);
          }
          onChanged();
        }
        if (!other.candy_.isEmpty()) {
          if (candy_.isEmpty()) {
            candy_ = other.candy_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCandyIsMutable();
            candy_.addAll(other.candy_);
          }
          onChanged();
        }
        if (!other.stardust_.isEmpty()) {
          if (stardust_.isEmpty()) {
            stardust_ = other.stardust_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureStardustIsMutable();
            stardust_.addAll(other.stardust_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> activityType_ =
        java.util.Collections.emptyList();
      private void ensureActivityTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          activityType_ = new java.util.ArrayList<java.lang.Integer>(activityType_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public java.util.List<com.github.aeonlucid.pogoprotos.Enums.ActivityType> getActivityTypeList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, com.github.aeonlucid.pogoprotos.Enums.ActivityType>(activityType_, activityType_converter_);
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public int getActivityTypeCount() {
        return activityType_.size();
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public com.github.aeonlucid.pogoprotos.Enums.ActivityType getActivityType(int index) {
        return activityType_converter_.convert(activityType_.get(index));
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public Builder setActivityType(
          int index, com.github.aeonlucid.pogoprotos.Enums.ActivityType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActivityTypeIsMutable();
        activityType_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public Builder addActivityType(com.github.aeonlucid.pogoprotos.Enums.ActivityType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActivityTypeIsMutable();
        activityType_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public Builder addAllActivityType(
          java.lang.Iterable<? extends com.github.aeonlucid.pogoprotos.Enums.ActivityType> values) {
        ensureActivityTypeIsMutable();
        for (com.github.aeonlucid.pogoprotos.Enums.ActivityType value : values) {
          activityType_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public Builder clearActivityType() {
        activityType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
      getActivityTypeValueList() {
        return java.util.Collections.unmodifiableList(activityType_);
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public int getActivityTypeValue(int index) {
        return activityType_.get(index);
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public Builder setActivityTypeValue(
          int index, int value) {
        ensureActivityTypeIsMutable();
        activityType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public Builder addActivityTypeValue(int value) {
        ensureActivityTypeIsMutable();
        activityType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1 [packed = true];</code>
       */
      public Builder addAllActivityTypeValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureActivityTypeIsMutable();
        for (int value : values) {
          activityType_.add(value);
        }
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> xp_ = java.util.Collections.emptyList();
      private void ensureXpIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          xp_ = new java.util.ArrayList<java.lang.Integer>(xp_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 xp = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getXpList() {
        return java.util.Collections.unmodifiableList(xp_);
      }
      /**
       * <code>repeated int32 xp = 2 [packed = true];</code>
       */
      public int getXpCount() {
        return xp_.size();
      }
      /**
       * <code>repeated int32 xp = 2 [packed = true];</code>
       */
      public int getXp(int index) {
        return xp_.get(index);
      }
      /**
       * <code>repeated int32 xp = 2 [packed = true];</code>
       */
      public Builder setXp(
          int index, int value) {
        ensureXpIsMutable();
        xp_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xp = 2 [packed = true];</code>
       */
      public Builder addXp(int value) {
        ensureXpIsMutable();
        xp_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xp = 2 [packed = true];</code>
       */
      public Builder addAllXp(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXpIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, xp_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xp = 2 [packed = true];</code>
       */
      public Builder clearXp() {
        xp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> candy_ = java.util.Collections.emptyList();
      private void ensureCandyIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          candy_ = new java.util.ArrayList<java.lang.Integer>(candy_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 candy = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getCandyList() {
        return java.util.Collections.unmodifiableList(candy_);
      }
      /**
       * <code>repeated int32 candy = 3 [packed = true];</code>
       */
      public int getCandyCount() {
        return candy_.size();
      }
      /**
       * <code>repeated int32 candy = 3 [packed = true];</code>
       */
      public int getCandy(int index) {
        return candy_.get(index);
      }
      /**
       * <code>repeated int32 candy = 3 [packed = true];</code>
       */
      public Builder setCandy(
          int index, int value) {
        ensureCandyIsMutable();
        candy_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 candy = 3 [packed = true];</code>
       */
      public Builder addCandy(int value) {
        ensureCandyIsMutable();
        candy_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 candy = 3 [packed = true];</code>
       */
      public Builder addAllCandy(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCandyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, candy_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 candy = 3 [packed = true];</code>
       */
      public Builder clearCandy() {
        candy_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> stardust_ = java.util.Collections.emptyList();
      private void ensureStardustIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          stardust_ = new java.util.ArrayList<java.lang.Integer>(stardust_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 stardust = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getStardustList() {
        return java.util.Collections.unmodifiableList(stardust_);
      }
      /**
       * <code>repeated int32 stardust = 4 [packed = true];</code>
       */
      public int getStardustCount() {
        return stardust_.size();
      }
      /**
       * <code>repeated int32 stardust = 4 [packed = true];</code>
       */
      public int getStardust(int index) {
        return stardust_.get(index);
      }
      /**
       * <code>repeated int32 stardust = 4 [packed = true];</code>
       */
      public Builder setStardust(
          int index, int value) {
        ensureStardustIsMutable();
        stardust_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 stardust = 4 [packed = true];</code>
       */
      public Builder addStardust(int value) {
        ensureStardustIsMutable();
        stardust_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 stardust = 4 [packed = true];</code>
       */
      public Builder addAllStardust(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStardustIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stardust_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 stardust = 4 [packed = true];</code>
       */
      public Builder clearStardust() {
        stardust_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward)
    }

    // @@protoc_insertion_point(class_scope:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward)
    private static final com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward();
    }

    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CaptureAward>
        PARSER = new com.google.protobuf.AbstractParser<CaptureAward>() {
      public CaptureAward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CaptureAward(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CaptureAward> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CaptureAward> getParserForType() {
      return PARSER;
    }

    public com.github.aeonlucid.pogoprotos.data.Capture.CaptureAward getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CaptureProbabilityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    java.util.List<com.github.aeonlucid.pogoprotos.inventory.Item.ItemId> getPokeballTypeList();
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    int getPokeballTypeCount();
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    com.github.aeonlucid.pogoprotos.inventory.Item.ItemId getPokeballType(int index);
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Integer>
    getPokeballTypeValueList();
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    int getPokeballTypeValue(int index);

    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Float> getCaptureProbabilityList();
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     */
    int getCaptureProbabilityCount();
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     */
    float getCaptureProbability(int index);

    /**
     * <code>double reticle_difficulty_scale = 12;</code>
     */
    double getReticleDifficultyScale();
  }
  /**
   * Protobuf type {@code com.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability}
   */
  public  static final class CaptureProbability extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability)
      CaptureProbabilityOrBuilder {
    // Use CaptureProbability.newBuilder() to construct.
    private CaptureProbability(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CaptureProbability() {
      pokeballType_ = java.util.Collections.emptyList();
      captureProbability_ = java.util.Collections.emptyList();
      reticleDifficultyScale_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CaptureProbability(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                pokeballType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              pokeballType_.add(rawValue);
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  pokeballType_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                pokeballType_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                captureProbability_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              captureProbability_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                captureProbability_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                captureProbability_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {

              reticleDifficultyScale_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          pokeballType_ = java.util.Collections.unmodifiableList(pokeballType_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          captureProbability_ = java.util.Collections.unmodifiableList(captureProbability_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability.class, com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability.Builder.class);
    }

    private int bitField0_;
    public static final int POKEBALL_TYPE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> pokeballType_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, com.github.aeonlucid.pogoprotos.inventory.Item.ItemId> pokeballType_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, com.github.aeonlucid.pogoprotos.inventory.Item.ItemId>() {
              public com.github.aeonlucid.pogoprotos.inventory.Item.ItemId convert(java.lang.Integer from) {
                com.github.aeonlucid.pogoprotos.inventory.Item.ItemId result = com.github.aeonlucid.pogoprotos.inventory.Item.ItemId.valueOf(from);
                return result == null ? com.github.aeonlucid.pogoprotos.inventory.Item.ItemId.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    public java.util.List<com.github.aeonlucid.pogoprotos.inventory.Item.ItemId> getPokeballTypeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.github.aeonlucid.pogoprotos.inventory.Item.ItemId>(pokeballType_, pokeballType_converter_);
    }
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    public int getPokeballTypeCount() {
      return pokeballType_.size();
    }
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    public com.github.aeonlucid.pogoprotos.inventory.Item.ItemId getPokeballType(int index) {
      return pokeballType_converter_.convert(pokeballType_.get(index));
    }
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
    getPokeballTypeValueList() {
      return pokeballType_;
    }
    /**
     * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    public int getPokeballTypeValue(int index) {
      return pokeballType_.get(index);
    }
    private int pokeballTypeMemoizedSerializedSize;

    public static final int CAPTURE_PROBABILITY_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> captureProbability_;
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Float>
        getCaptureProbabilityList() {
      return captureProbability_;
    }
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     */
    public int getCaptureProbabilityCount() {
      return captureProbability_.size();
    }
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     */
    public float getCaptureProbability(int index) {
      return captureProbability_.get(index);
    }
    private int captureProbabilityMemoizedSerializedSize = -1;

    public static final int RETICLE_DIFFICULTY_SCALE_FIELD_NUMBER = 12;
    private double reticleDifficultyScale_;
    /**
     * <code>double reticle_difficulty_scale = 12;</code>
     */
    public double getReticleDifficultyScale() {
      return reticleDifficultyScale_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getPokeballTypeList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(pokeballTypeMemoizedSerializedSize);
      }
      for (int i = 0; i < pokeballType_.size(); i++) {
        output.writeEnumNoTag(pokeballType_.get(i));
      }
      if (getCaptureProbabilityList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(captureProbabilityMemoizedSerializedSize);
      }
      for (int i = 0; i < captureProbability_.size(); i++) {
        output.writeFloatNoTag(captureProbability_.get(i));
      }
      if (reticleDifficultyScale_ != 0D) {
        output.writeDouble(12, reticleDifficultyScale_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < pokeballType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(pokeballType_.get(i));
        }
        size += dataSize;
        if (!getPokeballTypeList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }pokeballTypeMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getCaptureProbabilityList().size();
        size += dataSize;
        if (!getCaptureProbabilityList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        captureProbabilityMemoizedSerializedSize = dataSize;
      }
      if (reticleDifficultyScale_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, reticleDifficultyScale_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability)) {
        return super.equals(obj);
      }
      com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability other = (com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability) obj;

      boolean result = true;
      result = result && pokeballType_.equals(other.pokeballType_);
      result = result && getCaptureProbabilityList()
          .equals(other.getCaptureProbabilityList());
      result = result && (
          java.lang.Double.doubleToLongBits(getReticleDifficultyScale())
          == java.lang.Double.doubleToLongBits(
              other.getReticleDifficultyScale()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPokeballTypeCount() > 0) {
        hash = (37 * hash) + POKEBALL_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + pokeballType_.hashCode();
      }
      if (getCaptureProbabilityCount() > 0) {
        hash = (37 * hash) + CAPTURE_PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + getCaptureProbabilityList().hashCode();
      }
      hash = (37 * hash) + RETICLE_DIFFICULTY_SCALE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getReticleDifficultyScale()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability)
        com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbabilityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability.class, com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability.Builder.class);
      }

      // Construct using com.com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        pokeballType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        captureProbability_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        reticleDifficultyScale_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.aeonlucid.pogoprotos.data.Capture.internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_descriptor;
      }

      public com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability getDefaultInstanceForType() {
        return com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability.getDefaultInstance();
      }

      public com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability build() {
        com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability buildPartial() {
        com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability result = new com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          pokeballType_ = java.util.Collections.unmodifiableList(pokeballType_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.pokeballType_ = pokeballType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          captureProbability_ = java.util.Collections.unmodifiableList(captureProbability_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.captureProbability_ = captureProbability_;
        result.reticleDifficultyScale_ = reticleDifficultyScale_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability) {
          return mergeFrom((com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability other) {
        if (other == com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability.getDefaultInstance()) return this;
        if (!other.pokeballType_.isEmpty()) {
          if (pokeballType_.isEmpty()) {
            pokeballType_ = other.pokeballType_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePokeballTypeIsMutable();
            pokeballType_.addAll(other.pokeballType_);
          }
          onChanged();
        }
        if (!other.captureProbability_.isEmpty()) {
          if (captureProbability_.isEmpty()) {
            captureProbability_ = other.captureProbability_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCaptureProbabilityIsMutable();
            captureProbability_.addAll(other.captureProbability_);
          }
          onChanged();
        }
        if (other.getReticleDifficultyScale() != 0D) {
          setReticleDifficultyScale(other.getReticleDifficultyScale());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> pokeballType_ =
        java.util.Collections.emptyList();
      private void ensurePokeballTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          pokeballType_ = new java.util.ArrayList<java.lang.Integer>(pokeballType_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public java.util.List<com.github.aeonlucid.pogoprotos.inventory.Item.ItemId> getPokeballTypeList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, com.github.aeonlucid.pogoprotos.inventory.Item.ItemId>(pokeballType_, pokeballType_converter_);
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public int getPokeballTypeCount() {
        return pokeballType_.size();
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public com.github.aeonlucid.pogoprotos.inventory.Item.ItemId getPokeballType(int index) {
        return pokeballType_converter_.convert(pokeballType_.get(index));
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public Builder setPokeballType(
          int index, com.github.aeonlucid.pogoprotos.inventory.Item.ItemId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePokeballTypeIsMutable();
        pokeballType_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public Builder addPokeballType(com.github.aeonlucid.pogoprotos.inventory.Item.ItemId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePokeballTypeIsMutable();
        pokeballType_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public Builder addAllPokeballType(
          java.lang.Iterable<? extends com.github.aeonlucid.pogoprotos.inventory.Item.ItemId> values) {
        ensurePokeballTypeIsMutable();
        for (com.github.aeonlucid.pogoprotos.inventory.Item.ItemId value : values) {
          pokeballType_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public Builder clearPokeballType() {
        pokeballType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
      getPokeballTypeValueList() {
        return java.util.Collections.unmodifiableList(pokeballType_);
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public int getPokeballTypeValue(int index) {
        return pokeballType_.get(index);
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public Builder setPokeballTypeValue(
          int index, int value) {
        ensurePokeballTypeIsMutable();
        pokeballType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public Builder addPokeballTypeValue(int value) {
        ensurePokeballTypeIsMutable();
        pokeballType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .com.com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1 [packed = true];</code>
       */
      public Builder addAllPokeballTypeValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensurePokeballTypeIsMutable();
        for (int value : values) {
          pokeballType_.add(value);
        }
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> captureProbability_ = java.util.Collections.emptyList();
      private void ensureCaptureProbabilityIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          captureProbability_ = new java.util.ArrayList<java.lang.Float>(captureProbability_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float capture_probability = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Float>
          getCaptureProbabilityList() {
        return java.util.Collections.unmodifiableList(captureProbability_);
      }
      /**
       * <code>repeated float capture_probability = 2 [packed = true];</code>
       */
      public int getCaptureProbabilityCount() {
        return captureProbability_.size();
      }
      /**
       * <code>repeated float capture_probability = 2 [packed = true];</code>
       */
      public float getCaptureProbability(int index) {
        return captureProbability_.get(index);
      }
      /**
       * <code>repeated float capture_probability = 2 [packed = true];</code>
       */
      public Builder setCaptureProbability(
          int index, float value) {
        ensureCaptureProbabilityIsMutable();
        captureProbability_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float capture_probability = 2 [packed = true];</code>
       */
      public Builder addCaptureProbability(float value) {
        ensureCaptureProbabilityIsMutable();
        captureProbability_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float capture_probability = 2 [packed = true];</code>
       */
      public Builder addAllCaptureProbability(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureCaptureProbabilityIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, captureProbability_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float capture_probability = 2 [packed = true];</code>
       */
      public Builder clearCaptureProbability() {
        captureProbability_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private double reticleDifficultyScale_ ;
      /**
       * <code>double reticle_difficulty_scale = 12;</code>
       */
      public double getReticleDifficultyScale() {
        return reticleDifficultyScale_;
      }
      /**
       * <code>double reticle_difficulty_scale = 12;</code>
       */
      public Builder setReticleDifficultyScale(double value) {
        
        reticleDifficultyScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double reticle_difficulty_scale = 12;</code>
       */
      public Builder clearReticleDifficultyScale() {
        
        reticleDifficultyScale_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability)
    }

    // @@protoc_insertion_point(class_scope:com.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability)
    private static final com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability();
    }

    public static com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CaptureProbability>
        PARSER = new com.google.protobuf.AbstractParser<CaptureProbability>() {
      public CaptureProbability parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CaptureProbability(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CaptureProbability> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CaptureProbability> getParserForType() {
      return PARSER;
    }

    public com.github.aeonlucid.pogoprotos.data.Capture.CaptureProbability getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2com/com.github/aeonlucid/pogoprotos/data/C" +
      "apture.proto\022,com.com.github.aeonlucid.pogop" +
      "rotos.data.capture\032+com/com.github/aeonlucid" +
      "/pogoprotos/Enums.proto\0324com/com.github/aeon" +
      "lucid/pogoprotos/inventory/Item.proto\"\227\001" +
      "\n\014CaptureAward\022N\n\ractivity_type\030\001 \003(\01623." +
      "com.com.github.aeonlucid.pogoprotos.enums.Ac" +
      "tivityTypeB\002\020\001\022\016\n\002xp\030\002 \003(\005B\002\020\001\022\021\n\005candy\030" +
      "\003 \003(\005B\002\020\001\022\024\n\010stardust\030\004 \003(\005B\002\020\001\"\252\001\n\022Capt" +
      "ureProbability\022Q\n\rpokeball_type\030\001 \003(\01626.",
      "com.com.github.aeonlucid.pogoprotos.inventor" +
      "y.item.ItemIdB\002\020\001\022\037\n\023capture_probability" +
      "\030\002 \003(\002B\002\020\001\022 \n\030reticle_difficulty_scale\030\014" +
      " \001(\001B/\n$com.com.github.aeonlucid.pogoprotos." +
      "dataB\007Captureb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.github.aeonlucid.pogoprotos.Enums.getDescriptor(),
          com.github.aeonlucid.pogoprotos.inventory.Item.getDescriptor(),
        }, assigner);
    internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureAward_descriptor,
        new java.lang.String[] { "ActivityType", "Xp", "Candy", "Stardust", });
    internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_aeonlucid_pogoprotos_data_capture_CaptureProbability_descriptor,
        new java.lang.String[] { "PokeballType", "CaptureProbability", "ReticleDifficultyScale", });
    com.github.aeonlucid.pogoprotos.Enums.getDescriptor();
    com.github.aeonlucid.pogoprotos.inventory.Item.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
